{
  "version": 3,
  "file": "ngx-mask.umd.min.js",
  "sources": [
    "ng://ngx-mask/node_modules/tslib/tslib.es6.js",
    "ng://ngx-mask/out/app/ngx-mask/config.ts",
    "ng://ngx-mask/out/app/ngx-mask/mask.service.ts",
    "ng://ngx-mask/out/app/ngx-mask/mask.directive.ts",
    "ng://ngx-mask/out/app/ngx-mask/ngx-mask.module.ts"
  ],
  "sourcesContent": [
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n",
    "import { InjectionToken } from '@angular/core';\n\nexport interface IConfig {\n  clearIfNotMatch: boolean;\n  dropSpecialCharacters: boolean | string[];\n  specialCharacters: string[];\n  patterns: {\n    [character: string]: {\n      pattern: RegExp,\n      optional?: boolean\n    }\n  };\n}\n\nexport type optionsConfig = {\n  [P in keyof IConfig]?: IConfig[P]\n};\n\nexport const config: InjectionToken<string> = new InjectionToken('config');\nexport const NEW_CONFIG: InjectionToken<string> = new InjectionToken('NEW_CONFIG');\nexport const INITIAL_CONFIG: InjectionToken<IConfig> = new InjectionToken('INITIAL_CONFIG');\n\nexport const initialConfig: IConfig = {\n  clearIfNotMatch: false,\n  dropSpecialCharacters: true,\n  specialCharacters: ['/', '(', ')', '.', ':', '-', ' ', '+', ','],\n  patterns: {\n    '0': {\n      pattern: new RegExp('\\\\d'),\n    },\n    '9': {\n      pattern: new RegExp('\\\\d'),\n      optional: true\n    },\n    'A': {\n      pattern: new RegExp('\\[a-zA-Z0-9\\]')\n    },\n    'S': {\n      pattern: new RegExp('\\[a-zA-Z\\]')\n    }\n  }\n};\n",
    "import { ElementRef, EventEmitter, Inject, Injectable, Renderer2 } from '@angular/core';\nimport { config, IConfig } from './config';\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor } from '@angular/forms';\nimport { take } from 'rxjs/operators/take';\n\n@Injectable()\nexport class MaskService implements ControlValueAccessor {\n\n  public dropSpecialCharacters: IConfig['dropSpecialCharacters'];\n  public clearIfNotMatch: IConfig['clearIfNotMatch'];\n  public maskExpression: string = '';\n  public maskSpecialCharacters: IConfig['specialCharacters'];\n  public maskAvailablePatterns: IConfig['patterns'];\n  public maskSetter$$: EventEmitter<string> = new EventEmitter();\n\n  private _shift: Set<number>;\n  private _formElement: HTMLInputElement;\n\n  // tslint:disable-next-line\n  public onChange = (_: any) => { };\n\n  public onTouch = () => { };\n\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    @Inject(config) private _config: IConfig,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2,\n  ) {\n    this._shift = new Set();\n    this.clearIfNotMatch = this._config.clearIfNotMatch;\n    this.dropSpecialCharacters = this._config.dropSpecialCharacters;\n    this.maskSpecialCharacters = this._config!.specialCharacters;\n    this.maskAvailablePatterns = this._config.patterns;\n    // this._regExpForRemove = new RegExp(this.maskSpecialCharacters\n    //   .map((item: string) => `\\\\${item}`)\n    //   .join('|'), 'gi');\n\n    this._formElement = this._elementRef.nativeElement;\n  }\n\n  public applyMask(inputValue: string, maskExpression: string, position: number = 0, cb: Function = () => { }): string {\n    if (inputValue === undefined || inputValue === null) {\n      return '';\n    }\n\n    let cursor: number = 0;\n    let result: string = '';\n\n    const inputArray: string[] = inputValue.toString()\n      .split('');\n    // tslint:disable-next-line\n    for (let i: number = 0, inputSymbol: string = inputArray[0]; i\n    < inputArray.length; i++ , inputSymbol = inputArray[i]) {\n      if (result.length === maskExpression.length) {\n        break;\n      }\n\n      if (this._checkSymbolMask(inputSymbol, maskExpression[cursor])) {\n        result += inputSymbol;\n        cursor++;\n      } else if (this.maskSpecialCharacters.indexOf(maskExpression[cursor]) !== -1) {\n        result += maskExpression[cursor];\n        cursor++;\n        this._shift.add(cursor);\n        i--;\n      } else if (this.maskSpecialCharacters.indexOf(inputSymbol) > -1\n        && this.maskAvailablePatterns[maskExpression[cursor]]\n        && this.maskAvailablePatterns[maskExpression[cursor]].optional) {\n        cursor++;\n        i--;\n      }\n    }\n    if (result.length + 1 === maskExpression.length\n      && this.maskSpecialCharacters.indexOf(maskExpression[maskExpression.length - 1]) !== -1) {\n      result += maskExpression[maskExpression.length - 1];\n    }\n\n    let shift: number = 1;\n    let newPosition: number = position + 1;\n    while (this._shift.has(newPosition)) {\n      shift++;\n      newPosition++;\n    }\n    cb(this._shift.has(position) ? shift : 0);\n\n\n    Array.isArray(this.dropSpecialCharacters)\n      ? this.onChange(this._removeMask(result, this.dropSpecialCharacters))\n      : this.dropSpecialCharacters === true\n      ? this.onChange(this._removeMask(result, this.maskSpecialCharacters))\n      : this.onChange(result);\n\n    return result;\n  }\n\n  public applyValueChanges(position: number = 0, cb: Function = () => { }): void {\n    const maskedInput: string = this.applyMask(this._formElement.value, this.maskExpression, position, cb);\n\n    this._formElement.value = maskedInput;\n\n    if (this._formElement === this.document.activeElement) {\n      return;\n    }\n    this.clearIfNotMatchFn();\n  }\n\n  public clearIfNotMatchFn(): void {\n    if (\n      this.clearIfNotMatch === true && this.maskExpression.length\n      !== this._formElement.value.length) {\n      this._formElementProperty = ['value', ''];\n    }\n  }\n\n\n  /** It writes the value in the input */\n  public async writeValue(inputValue: string): Promise<void> {\n    if (inputValue === undefined || inputValue === null) {\n      return;\n    }\n    const maskExpression: string = this.maskExpression || await this.maskSetter$$.pipe(take(1))\n      .toPromise();\n\n    inputValue\n      ? this._formElementProperty = ['value', this.applyMask(inputValue, maskExpression)]\n      : this._formElementProperty = ['value', ''];\n  }\n\n  // tslint:disable-next-line\n  public registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  // tslint:disable-next-line\n  public registerOnTouched(fn: any): void {\n    this.onTouch = fn;\n  }\n\n  /** It disables the input element */\n  public setDisabledState(isDisabled: boolean): void {\n    this._formElementProperty = ['disabled', isDisabled];\n  }\n\n  private _removeMask(value: string, specialCharactersForRemove: string[]): string {\n    return value\n      ? value.replace(this._regExpForRemove(specialCharactersForRemove), '')\n      : value;\n  }\n\n  private _checkSymbolMask(inputSymbol: string, maskSymbol: string): boolean {\n    return inputSymbol\n      === maskSymbol\n      || this.maskAvailablePatterns[maskSymbol] && this.maskAvailablePatterns[maskSymbol].pattern\n      && this.maskAvailablePatterns[maskSymbol].pattern.test(inputSymbol);\n  }\n\n  private set _formElementProperty([name, value]: [string, string | boolean]) {\n    this._renderer.setProperty(this._formElement, name, value);\n  }\n\n  private _regExpForRemove(specialCharactersForRemove: string []): RegExp {\n    return new RegExp(specialCharactersForRemove\n      .map((item: string) => `\\\\${item}`)\n      .join('|'), 'gi');\n  }\n\n}\n",
    "import {\n  Directive, HostListener, Inject, Input\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MaskService } from './mask.service';\nimport { IConfig } from './config';\n\n@Directive({\n  selector: '[mask]',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: MaskService,\n      multi: true\n    },\n    MaskService\n  ],\n})\nexport class MaskDirective {\n\n  private _maskValue: string;\n\n  public constructor(\n    // tslint:disable-next-line\n    @Inject(DOCUMENT) private document: any,\n    private _maskService: MaskService,\n  ) { }\n\n  @Input('mask')\n  public set maskExpression(value: string) {\n    this._maskValue = value || '';\n    if (!this._maskValue) {\n      return;\n    }\n    this._maskService.maskExpression = this._maskValue;\n    this._maskService.maskSetter$$.emit(this._maskValue);\n  }\n\n  @Input()\n  public set specialCharacters(value: IConfig['specialCharacters']) {\n    if (!value || !Array.isArray(value) || Array.isArray(value) && !value.length) {\n      return;\n    }\n    this._maskService.maskSpecialCharacters = value;\n  }\n\n  @Input()\n  public set patterns(value: IConfig['patterns']) {\n    if (!value) {\n      return;\n    }\n    this._maskService.maskAvailablePatterns = value;\n  }\n\n  @Input()\n  public set dropSpecialCharacters(value: IConfig['dropSpecialCharacters']) {\n    this._maskService.dropSpecialCharacters = value;\n  }\n\n  @Input()\n  public set clearIfNotMatch(value: IConfig['clearIfNotMatch']) {\n    this._maskService.clearIfNotMatch = value;\n  }\n\n  @HostListener('input', ['$event'])\n  public onInput(e: KeyboardEvent): void {\n    const el: HTMLInputElement = (e.target as HTMLInputElement);\n\n    if (!this._maskValue) {\n      this._maskService.onChange(el.value);\n      return;\n    }\n\n    const position: number = el.selectionStart as number;\n    let caretShift: number = 0;\n\n    this._maskService.applyValueChanges(\n      position,\n      (shift: number) => caretShift = shift\n    );\n\n    // only set the selection if the element is active\n    if (this.document.activeElement !== el) {\n     return;\n    }\n    el.selectionStart = el.selectionEnd = position + (\n      // tslint:disable-next-line\n      (e as any).inputType === 'deleteContentBackward'\n        ? 0\n        : caretShift\n    );\n  }\n\n  @HostListener('blur')\n  public onBlur(): void {\n    this._maskService.clearIfNotMatchFn();\n    this._maskService.onTouch();\n  }\n}\n",
    "import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MaskDirective } from './mask.directive';\n\nimport { config, INITIAL_CONFIG, initialConfig, NEW_CONFIG, optionsConfig } from './config';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MaskDirective],\n  declarations: [MaskDirective]\n})\nexport class NgxMaskModule {\n\n  public static forRoot(configValue?: optionsConfig): ModuleWithProviders {\n    return {\n      ngModule: NgxMaskModule,\n      providers: [\n        {\n          provide: NEW_CONFIG,\n          useValue: configValue\n        },\n        {\n          provide: INITIAL_CONFIG,\n          useValue: initialConfig\n        },\n        {\n          provide: config,\n          useFactory: _configFactory,\n          deps: [INITIAL_CONFIG, NEW_CONFIG]\n        },\n      ]\n    };\n  }\n}\n\n/**\n * @internal\n */\nexport function _configFactory\n(initConfig: optionsConfig, configValue: optionsConfig | (() => optionsConfig)): Function | optionsConfig {\n  return (typeof configValue === 'function') ? configValue() : { ...initConfig, ...configValue };\n}\n"
  ],
  "names": [
    "__generator",
    "thisArg",
    "body",
    "f",
    "y",
    "t",
    "g",
    "_",
    "label",
    "sent",
    "trys",
    "ops",
    "next",
    "verb",
    "throw",
    "return",
    "Symbol",
    "iterator",
    "this",
    "n",
    "v",
    "op",
    "TypeError",
    "call",
    "done",
    "value",
    "pop",
    "length",
    "push",
    "e",
    "step",
    "config",
    "InjectionToken",
    "NEW_CONFIG",
    "INITIAL_CONFIG",
    "initialConfig",
    "clearIfNotMatch",
    "dropSpecialCharacters",
    "specialCharacters",
    "patterns",
    "0",
    "pattern",
    "RegExp",
    "9",
    "optional",
    "A",
    "S",
    "MaskService",
    "document",
    "_config",
    "_elementRef",
    "_renderer",
    "maskExpression",
    "maskSetter$$",
    "EventEmitter",
    "onChange",
    "onTouch",
    "_shift",
    "Set",
    "maskSpecialCharacters",
    "maskAvailablePatterns",
    "_formElement",
    "nativeElement",
    "prototype",
    "applyMask",
    "inputValue",
    "position",
    "cb",
    "undefined",
    "cursor",
    "result",
    "inputArray",
    "toString",
    "split",
    "i",
    "inputSymbol",
    "_checkSymbolMask",
    "indexOf",
    "add",
    "shift",
    "newPosition",
    "has",
    "Array",
    "isArray",
    "_removeMask",
    "applyValueChanges",
    "maskedInput",
    "activeElement",
    "clearIfNotMatchFn",
    "_formElementProperty",
    "writeValue",
    "generator",
    "_a",
    "pipe",
    "take",
    "toPromise",
    "_b",
    "P",
    "_arguments",
    "Promise",
    "resolve",
    "reject",
    "fulfilled",
    "rejected",
    "then",
    "apply",
    "registerOnChange",
    "fn",
    "registerOnTouched",
    "setDisabledState",
    "isDisabled",
    "specialCharactersForRemove",
    "replace",
    "_regExpForRemove",
    "maskSymbol",
    "test",
    "Object",
    "defineProperty",
    "set",
    "o",
    "m",
    "r",
    "ar",
    "error",
    "__read",
    "name",
    "setProperty",
    "map",
    "item",
    "join",
    "type",
    "Injectable",
    "decorators",
    "Inject",
    "args",
    "DOCUMENT",
    "ElementRef",
    "Renderer2",
    "MaskDirective",
    "_maskService",
    "_maskValue",
    "emit",
    "onInput",
    "el",
    "caretShift",
    "selectionStart",
    "selectionEnd",
    "inputType",
    "onBlur",
    "Directive",
    "selector",
    "providers",
    "provide",
    "NG_VALUE_ACCESSOR",
    "useExisting",
    "multi",
    "Input",
    "HostListener",
    "NgxMaskModule",
    "forRoot",
    "configValue",
    "ngModule",
    "useValue",
    "useFactory",
    "_configFactory",
    "deps",
    "initConfig",
    "assign",
    "NgModule",
    "imports",
    "CommonModule",
    "exports",
    "declarations"
  ],
  "mappings": "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"
}
